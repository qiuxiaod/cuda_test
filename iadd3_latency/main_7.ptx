
Fatbin elf code:
================
arch = sm_100a
code version = [1,8]
host = linux
compile_size = 64bit

Fatbin ptx code:
================
arch = sm_100
code version = [8,7]
host = linux
compile_size = 64bit
compressed
ptxasOptions = -O3  

//
//
//
//
//
//

.version 8.7
.target sm_100
.address_size 64

//

.visible .entry _Z20benchmarkIADDLatencyPyS_Pj(
.param .u64 _Z20benchmarkIADDLatencyPyS_Pj_param_0,
.param .u64 _Z20benchmarkIADDLatencyPyS_Pj_param_1,
.param .u64 _Z20benchmarkIADDLatencyPyS_Pj_param_2
)
{
.reg .pred %p<2>;
.reg .b32 %r<31>;
.reg .b64 %rd<13>;

ld.param.u64 %rd4, [_Z20benchmarkIADDLatencyPyS_Pj_param_0];
ld.param.u64 %rd5, [_Z20benchmarkIADDLatencyPyS_Pj_param_1];
ld.param.u64 %rd8, [_Z20benchmarkIADDLatencyPyS_Pj_param_2];
cvta.to.global.u64 %rd1, %rd8;
mov.u32 %r2, %tid.x;
mul.wide.u32 %rd9, %r2, 4;
add.s64 %rd10, %rd1, %rd9;
ld.global.u32 %r3, [%rd10];
ld.global.u32 %r4, [%rd10+128];
ld.global.u32 %r5, [%rd10+256];
ld.global.u32 %r6, [%rd10+384];
ld.global.u32 %r7, [%rd10+512];
ld.global.u32 %r8, [%rd10+640];
ld.global.u32 %r9, [%rd10+768];
ld.global.u32 %r10, [%rd10+896];
ld.global.u32 %r11, [%rd10+1024];
ld.global.u32 %r12, [%rd10+1152];
ld.global.u32 %r13, [%rd10+1280];
ld.global.u32 %r14, [%rd10+1408];
ld.global.u32 %r15, [%rd10+1536];
ld.global.u32 %r16, [%rd10+1664];
ld.global.u32 %r17, [%rd10+1792];
bar.sync 0;
membar.gl;
bar.sync 0;
bar.warp.sync -1;
//
mov.u64 %rd6, %clock64;
//
add.s32 %r18, %r4, %r3;
add.s32 %r19, %r5, %r18;
add.s32 %r20, %r6, %r19;
add.s32 %r21, %r7, %r20;
add.s32 %r22, %r8, %r21;
add.s32 %r23, %r9, %r22;
add.s32 %r24, %r10, %r23;
add.s32 %r25, %r11, %r24;
add.s32 %r26, %r12, %r25;
add.s32 %r27, %r13, %r26;
add.s32 %r28, %r14, %r27;
add.s32 %r29, %r15, %r28;
add.s32 %r30, %r16, %r29;
add.s32 %r1, %r17, %r30;
//
mov.u64 %rd7, %clock64;
//
bar.sync 0;
setp.ne.s32 %p1, %r2, 0;
@%p1 bra $L__BB0_2;
cvta.to.global.u64 %rd11, %rd4;
cvta.to.global.u64 %rd12, %rd5;
st.global.u64 [%rd11], %rd6;
st.global.u64 [%rd12], %rd7;
st.global.u32 [%rd1], %r1;
$L__BB0_2:
ret;

}


Fatbin elf code:
================
arch = sm_100a
code version = [1,8]
host = linux
compile_size = 64bit

Fatbin ptx code:
================
arch = sm_100a
code version = [8,7]
host = linux
compile_size = 64bit
compressed
ptxasOptions = -O3  

//
//
//
//
//
//

.version 8.7
.target sm_100a
.address_size 64

//

.visible .entry _Z20benchmarkIADDLatencyPyS_Pj(
.param .u64 _Z20benchmarkIADDLatencyPyS_Pj_param_0,
.param .u64 _Z20benchmarkIADDLatencyPyS_Pj_param_1,
.param .u64 _Z20benchmarkIADDLatencyPyS_Pj_param_2
)
{
.reg .pred %p<2>;
.reg .b32 %r<31>;
.reg .b64 %rd<13>;

ld.param.u64 %rd4, [_Z20benchmarkIADDLatencyPyS_Pj_param_0];
ld.param.u64 %rd5, [_Z20benchmarkIADDLatencyPyS_Pj_param_1];
ld.param.u64 %rd8, [_Z20benchmarkIADDLatencyPyS_Pj_param_2];
cvta.to.global.u64 %rd1, %rd8;
mov.u32 %r2, %tid.x;
mul.wide.u32 %rd9, %r2, 4;
add.s64 %rd10, %rd1, %rd9;
ld.global.u32 %r3, [%rd10];
ld.global.u32 %r4, [%rd10+128];
ld.global.u32 %r5, [%rd10+256];
ld.global.u32 %r6, [%rd10+384];
ld.global.u32 %r7, [%rd10+512];
ld.global.u32 %r8, [%rd10+640];
ld.global.u32 %r9, [%rd10+768];
ld.global.u32 %r10, [%rd10+896];
ld.global.u32 %r11, [%rd10+1024];
ld.global.u32 %r12, [%rd10+1152];
ld.global.u32 %r13, [%rd10+1280];
ld.global.u32 %r14, [%rd10+1408];
ld.global.u32 %r15, [%rd10+1536];
ld.global.u32 %r16, [%rd10+1664];
ld.global.u32 %r17, [%rd10+1792];
bar.sync 0;
membar.gl;
bar.sync 0;
bar.warp.sync -1;
//
mov.u64 %rd6, %clock64;
//
add.s32 %r18, %r4, %r3;
add.s32 %r19, %r5, %r18;
add.s32 %r20, %r6, %r19;
add.s32 %r21, %r7, %r20;
add.s32 %r22, %r8, %r21;
add.s32 %r23, %r9, %r22;
add.s32 %r24, %r10, %r23;
add.s32 %r25, %r11, %r24;
add.s32 %r26, %r12, %r25;
add.s32 %r27, %r13, %r26;
add.s32 %r28, %r14, %r27;
add.s32 %r29, %r15, %r28;
add.s32 %r30, %r16, %r29;
add.s32 %r1, %r17, %r30;
//
mov.u64 %rd7, %clock64;
//
bar.sync 0;
setp.ne.s32 %p1, %r2, 0;
@%p1 bra $L__BB0_2;
cvta.to.global.u64 %rd11, %rd4;
cvta.to.global.u64 %rd12, %rd5;
st.global.u64 [%rd11], %rd6;
st.global.u64 [%rd12], %rd7;
st.global.u32 [%rd1], %r1;
$L__BB0_2:
ret;

}

